// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SecuringAngularApps.API.Model;
using System;

namespace SecuringAngularApps.API.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20180408201512_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SecuringAngularApps.API.Model.Milestone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MilestoneStatusId");

                    b.Property<string>("Name");

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Milestones");
                });

            modelBuilder.Entity("SecuringAngularApps.API.Model.MilestoneStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("MilestoneStatuses");
                });

            modelBuilder.Entity("SecuringAngularApps.API.Model.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("SecuringAngularApps.API.Model.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ProjectId");

                    b.Property<string>("UserProfileId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserPermissions");
                });

            modelBuilder.Entity("SecuringAngularApps.API.Model.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("HasLoggedIn");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("SecuringAngularApps.API.Model.Milestone", b =>
                {
                    b.HasOne("SecuringAngularApps.API.Model.Project", "Project")
                        .WithMany("Milestones")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SecuringAngularApps.API.Model.UserPermission", b =>
                {
                    b.HasOne("SecuringAngularApps.API.Model.Project")
                        .WithMany("UserPermissions")
                        .HasForeignKey("ProjectId");

                    b.HasOne("SecuringAngularApps.API.Model.UserProfile")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserProfileId");
                });
#pragma warning restore 612, 618
        }
    }
}
